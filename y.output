Grammar

    0 $accept: program $end

    1 program: program_heading semicolon class_list DOT

    2 program_heading: PROGRAM identifier
    3                | PROGRAM identifier LPAREN identifier_list RPAREN

    4 identifier_list: identifier_list comma identifier
    5                | identifier

    6 class_list: class_list class_identification PBEGIN class_block END
    7           | class_identification PBEGIN class_block END

    8 class_identification: CLASS identifier
    9                     | CLASS identifier EXTENDS identifier

   10 class_block: variable_declaration_part func_declaration_list

   11 type_denoter: array_type
   12             | identifier

   13 array_type: ARRAY LBRAC range RBRAC OF type_denoter

   14 range: unsigned_integer DOTDOT unsigned_integer

   15 variable_declaration_part: VAR variable_declaration_list semicolon
   16                          | /* empty */

   17 variable_declaration_list: variable_declaration_list semicolon variable_declaration
   18                          | variable_declaration

   19 variable_declaration: identifier_list COLON type_denoter

   20 func_declaration_list: func_declaration_list semicolon function_declaration
   21                      | function_declaration
   22                      | /* empty */

   23 formal_parameter_list: LPAREN formal_parameter_section_list RPAREN

   24 formal_parameter_section_list: formal_parameter_section_list semicolon formal_parameter_section
   25                              | formal_parameter_section

   26 formal_parameter_section: value_parameter_specification
   27                         | variable_parameter_specification

   28 value_parameter_specification: identifier_list COLON identifier

   29 variable_parameter_specification: VAR identifier_list COLON identifier

   30 function_declaration: function_identification semicolon function_block
   31                     | function_heading semicolon function_block

   32 function_heading: FUNCTION identifier COLON result_type
   33                 | FUNCTION identifier formal_parameter_list COLON result_type

   34 result_type: identifier

   35 function_identification: FUNCTION identifier

   36 function_block: variable_declaration_part statement_part

   37 statement_part: compound_statement

   38 compound_statement: PBEGIN statement_sequence END

   39 statement_sequence: statement
   40                   | statement_sequence semicolon statement

   41 statement: assignment_statement
   42          | compound_statement
   43          | if_statement
   44          | while_statement
   45          | print_statement

   46 while_statement: WHILE boolean_expression DO statement

   47 if_statement: IF boolean_expression THEN statement ELSE statement

   48 assignment_statement: variable_access ASSIGNMENT expression
   49                     | variable_access ASSIGNMENT object_instantiation

   50 object_instantiation: NEW identifier
   51                     | NEW identifier params

   52 print_statement: PRINT variable_access

   53 variable_access: identifier
   54                | indexed_variable
   55                | attribute_designator
   56                | method_designator

   57 indexed_variable: variable_access LBRAC index_expression_list RBRAC

   58 index_expression_list: index_expression_list comma index_expression
   59                      | index_expression

   60 index_expression: expression

   61 attribute_designator: variable_access DOT identifier

   62 method_designator: variable_access DOT function_designator

   63 params: LPAREN actual_parameter_list RPAREN

   64 actual_parameter_list: actual_parameter_list comma actual_parameter
   65                      | actual_parameter

   66 actual_parameter: expression
   67                 | expression COLON expression
   68                 | expression COLON expression COLON expression

   69 boolean_expression: expression

   70 expression: simple_expression
   71           | simple_expression relop simple_expression

   72 simple_expression: term
   73                  | simple_expression addop term

   74 term: factor
   75     | term mulop factor

   76 sign: PLUS
   77     | MINUS

   78 factor: sign factor
   79       | primary

   80 primary: variable_access
   81        | unsigned_constant
   82        | function_designator
   83        | LPAREN expression RPAREN
   84        | NOT primary

   85 unsigned_constant: unsigned_number

   86 unsigned_number: unsigned_integer

   87 unsigned_integer: DIGSEQ

   88 function_designator: identifier params

   89 addop: PLUS
   90      | MINUS
   91      | OR

   92 mulop: STAR
   93      | SLASH
   94      | MOD
   95      | AND

   96 relop: EQUAL
   97      | NOTEQUAL
   98      | LT
   99      | GT
  100      | LE
  101      | GE

  102 identifier: IDENTIFIER

  103 semicolon: SEMICOLON

  104 comma: COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 95
ARRAY (259) 13
ASSIGNMENT (260) 48 49
CLASS (261) 8 9
COLON (262) 19 28 29 32 33 67 68
COMMA (263) 104
DIGSEQ (264) 87
DO (265) 46
DOT (266) 1 61 62
DOTDOT (267) 14
ELSE (268) 47
END (269) 6 7 38
EQUAL (270) 96
EXTENDS (271) 9
FUNCTION (272) 32 33 35
GE (273) 101
GT (274) 99
IDENTIFIER (275) 102
IF (276) 47
LBRAC (277) 13 57
LE (278) 100
LPAREN (279) 3 23 63 83
LT (280) 98
MINUS (281) 77 90
MOD (282) 94
NEW (283) 50 51
NOT (284) 84
NOTEQUAL (285) 97
OF (286) 13
OR (287) 91
PBEGIN (288) 6 7 38
PLUS (289) 76 89
PRINT (290) 52
PROGRAM (291) 2 3
RBRAC (292) 13 57
RPAREN (293) 3 23 63 83
SEMICOLON (294) 103
SLASH (295) 93
STAR (296) 92
THEN (297) 47
VAR (298) 15 29
WHILE (299) 46


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
program_heading (47)
    on left: 2 3, on right: 1
identifier_list (48)
    on left: 4 5, on right: 3 4 19 28 29
class_list (49)
    on left: 6 7, on right: 1 6
class_identification (50)
    on left: 8 9, on right: 6 7
class_block (51)
    on left: 10, on right: 6 7
type_denoter (52)
    on left: 11 12, on right: 13 19
array_type (53)
    on left: 13, on right: 11
range (54)
    on left: 14, on right: 13
variable_declaration_part (55)
    on left: 15 16, on right: 10 36
variable_declaration_list (56)
    on left: 17 18, on right: 15 17
variable_declaration (57)
    on left: 19, on right: 17 18
func_declaration_list (58)
    on left: 20 21 22, on right: 10 20
formal_parameter_list (59)
    on left: 23, on right: 33
formal_parameter_section_list (60)
    on left: 24 25, on right: 23 24
formal_parameter_section (61)
    on left: 26 27, on right: 24 25
value_parameter_specification (62)
    on left: 28, on right: 26
variable_parameter_specification (63)
    on left: 29, on right: 27
function_declaration (64)
    on left: 30 31, on right: 20 21
function_heading (65)
    on left: 32 33, on right: 31
result_type (66)
    on left: 34, on right: 32 33
function_identification (67)
    on left: 35, on right: 30
function_block (68)
    on left: 36, on right: 30 31
statement_part (69)
    on left: 37, on right: 36
compound_statement (70)
    on left: 38, on right: 37 42
statement_sequence (71)
    on left: 39 40, on right: 38 40
statement (72)
    on left: 41 42 43 44 45, on right: 39 40 46 47
while_statement (73)
    on left: 46, on right: 44
if_statement (74)
    on left: 47, on right: 43
assignment_statement (75)
    on left: 48 49, on right: 41
object_instantiation (76)
    on left: 50 51, on right: 49
print_statement (77)
    on left: 52, on right: 45
variable_access (78)
    on left: 53 54 55 56, on right: 48 49 52 57 61 62 80
indexed_variable (79)
    on left: 57, on right: 54
index_expression_list (80)
    on left: 58 59, on right: 57 58
index_expression (81)
    on left: 60, on right: 58 59
attribute_designator (82)
    on left: 61, on right: 55
method_designator (83)
    on left: 62, on right: 56
params (84)
    on left: 63, on right: 51 88
actual_parameter_list (85)
    on left: 64 65, on right: 63 64
actual_parameter (86)
    on left: 66 67 68, on right: 64 65
boolean_expression (87)
    on left: 69, on right: 46 47
expression (88)
    on left: 70 71, on right: 48 60 66 67 68 69 83
simple_expression (89)
    on left: 72 73, on right: 70 71 73
term (90)
    on left: 74 75, on right: 72 73 75
sign (91)
    on left: 76 77, on right: 78
factor (92)
    on left: 78 79, on right: 74 75 78
primary (93)
    on left: 80 81 82 83 84, on right: 79 84
unsigned_constant (94)
    on left: 85, on right: 81
unsigned_number (95)
    on left: 86, on right: 85
unsigned_integer (96)
    on left: 87, on right: 14 86
function_designator (97)
    on left: 88, on right: 62 82
addop (98)
    on left: 89 90 91, on right: 73
mulop (99)
    on left: 92 93 94 95, on right: 75
relop (100)
    on left: 96 97 98 99 100 101, on right: 71
identifier (101)
    on left: 102, on right: 2 3 4 5 8 9 12 28 29 32 33 34 35 50 51
    53 61 88
semicolon (102)
    on left: 103, on right: 1 15 17 20 24 30 31 40
comma (103)
    on left: 104, on right: 4 58 64


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program          go to state 2
    program_heading  go to state 3


state 1

    2 program_heading: PROGRAM . identifier
    3                | PROGRAM . identifier LPAREN identifier_list RPAREN

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: program_heading . semicolon class_list DOT

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


state 4

  102 identifier: IDENTIFIER .

    $default  reduce using rule 102 (identifier)


state 5

    2 program_heading: PROGRAM identifier .
    3                | PROGRAM identifier . LPAREN identifier_list RPAREN

    LPAREN  shift, and go to state 9

    $default  reduce using rule 2 (program_heading)


state 6

    0 $accept: program $end .

    $default  accept


state 7

  103 semicolon: SEMICOLON .

    $default  reduce using rule 103 (semicolon)


state 8

    1 program: program_heading semicolon . class_list DOT

    CLASS  shift, and go to state 10

    class_list            go to state 11
    class_identification  go to state 12


state 9

    3 program_heading: PROGRAM identifier LPAREN . identifier_list RPAREN

    IDENTIFIER  shift, and go to state 4

    identifier_list  go to state 13
    identifier       go to state 14


state 10

    8 class_identification: CLASS . identifier
    9                     | CLASS . identifier EXTENDS identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 15


state 11

    1 program: program_heading semicolon class_list . DOT
    6 class_list: class_list . class_identification PBEGIN class_block END

    CLASS  shift, and go to state 10
    DOT    shift, and go to state 16

    class_identification  go to state 17


state 12

    7 class_list: class_identification . PBEGIN class_block END

    PBEGIN  shift, and go to state 18


state 13

    3 program_heading: PROGRAM identifier LPAREN identifier_list . RPAREN
    4 identifier_list: identifier_list . comma identifier

    COMMA   shift, and go to state 19
    RPAREN  shift, and go to state 20

    comma  go to state 21


state 14

    5 identifier_list: identifier .

    $default  reduce using rule 5 (identifier_list)


state 15

    8 class_identification: CLASS identifier .
    9                     | CLASS identifier . EXTENDS identifier

    EXTENDS  shift, and go to state 22

    $default  reduce using rule 8 (class_identification)


state 16

    1 program: program_heading semicolon class_list DOT .

    $default  reduce using rule 1 (program)


state 17

    6 class_list: class_list class_identification . PBEGIN class_block END

    PBEGIN  shift, and go to state 23


state 18

    7 class_list: class_identification PBEGIN . class_block END

    VAR  shift, and go to state 24

    $default  reduce using rule 16 (variable_declaration_part)

    class_block                go to state 25
    variable_declaration_part  go to state 26


state 19

  104 comma: COMMA .

    $default  reduce using rule 104 (comma)


state 20

    3 program_heading: PROGRAM identifier LPAREN identifier_list RPAREN .

    $default  reduce using rule 3 (program_heading)


state 21

    4 identifier_list: identifier_list comma . identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 27


state 22

    9 class_identification: CLASS identifier EXTENDS . identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 28


state 23

    6 class_list: class_list class_identification PBEGIN . class_block END

    VAR  shift, and go to state 24

    $default  reduce using rule 16 (variable_declaration_part)

    class_block                go to state 29
    variable_declaration_part  go to state 26


state 24

   15 variable_declaration_part: VAR . variable_declaration_list semicolon

    IDENTIFIER  shift, and go to state 4

    identifier_list            go to state 30
    variable_declaration_list  go to state 31
    variable_declaration       go to state 32
    identifier                 go to state 14


state 25

    7 class_list: class_identification PBEGIN class_block . END

    END  shift, and go to state 33


state 26

   10 class_block: variable_declaration_part . func_declaration_list

    FUNCTION  shift, and go to state 34

    $default  reduce using rule 22 (func_declaration_list)

    func_declaration_list    go to state 35
    function_declaration     go to state 36
    function_heading         go to state 37
    function_identification  go to state 38


state 27

    4 identifier_list: identifier_list comma identifier .

    $default  reduce using rule 4 (identifier_list)


state 28

    9 class_identification: CLASS identifier EXTENDS identifier .

    $default  reduce using rule 9 (class_identification)


state 29

    6 class_list: class_list class_identification PBEGIN class_block . END

    END  shift, and go to state 39


state 30

    4 identifier_list: identifier_list . comma identifier
   19 variable_declaration: identifier_list . COLON type_denoter

    COLON  shift, and go to state 40
    COMMA  shift, and go to state 19

    comma  go to state 21


state 31

   15 variable_declaration_part: VAR variable_declaration_list . semicolon
   17 variable_declaration_list: variable_declaration_list . semicolon variable_declaration

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 41


state 32

   18 variable_declaration_list: variable_declaration .

    $default  reduce using rule 18 (variable_declaration_list)


state 33

    7 class_list: class_identification PBEGIN class_block END .

    $default  reduce using rule 7 (class_list)


state 34

   32 function_heading: FUNCTION . identifier COLON result_type
   33                 | FUNCTION . identifier formal_parameter_list COLON result_type
   35 function_identification: FUNCTION . identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 42


state 35

   10 class_block: variable_declaration_part func_declaration_list .
   20 func_declaration_list: func_declaration_list . semicolon function_declaration

    SEMICOLON  shift, and go to state 7

    $default  reduce using rule 10 (class_block)

    semicolon  go to state 43


state 36

   21 func_declaration_list: function_declaration .

    $default  reduce using rule 21 (func_declaration_list)


state 37

   31 function_declaration: function_heading . semicolon function_block

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 44


state 38

   30 function_declaration: function_identification . semicolon function_block

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 45


state 39

    6 class_list: class_list class_identification PBEGIN class_block END .

    $default  reduce using rule 6 (class_list)


state 40

   19 variable_declaration: identifier_list COLON . type_denoter

    ARRAY       shift, and go to state 46
    IDENTIFIER  shift, and go to state 4

    type_denoter  go to state 47
    array_type    go to state 48
    identifier    go to state 49


state 41

   15 variable_declaration_part: VAR variable_declaration_list semicolon .
   17 variable_declaration_list: variable_declaration_list semicolon . variable_declaration

    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 15 (variable_declaration_part)

    identifier_list       go to state 30
    variable_declaration  go to state 50
    identifier            go to state 14


state 42

   32 function_heading: FUNCTION identifier . COLON result_type
   33                 | FUNCTION identifier . formal_parameter_list COLON result_type
   35 function_identification: FUNCTION identifier .

    COLON   shift, and go to state 51
    LPAREN  shift, and go to state 52

    $default  reduce using rule 35 (function_identification)

    formal_parameter_list  go to state 53


state 43

   20 func_declaration_list: func_declaration_list semicolon . function_declaration

    FUNCTION  shift, and go to state 34

    function_declaration     go to state 54
    function_heading         go to state 37
    function_identification  go to state 38


state 44

   31 function_declaration: function_heading semicolon . function_block

    VAR  shift, and go to state 24

    $default  reduce using rule 16 (variable_declaration_part)

    variable_declaration_part  go to state 55
    function_block             go to state 56


state 45

   30 function_declaration: function_identification semicolon . function_block

    VAR  shift, and go to state 24

    $default  reduce using rule 16 (variable_declaration_part)

    variable_declaration_part  go to state 55
    function_block             go to state 57


state 46

   13 array_type: ARRAY . LBRAC range RBRAC OF type_denoter

    LBRAC  shift, and go to state 58


state 47

   19 variable_declaration: identifier_list COLON type_denoter .

    $default  reduce using rule 19 (variable_declaration)


state 48

   11 type_denoter: array_type .

    $default  reduce using rule 11 (type_denoter)


state 49

   12 type_denoter: identifier .

    $default  reduce using rule 12 (type_denoter)


state 50

   17 variable_declaration_list: variable_declaration_list semicolon variable_declaration .

    $default  reduce using rule 17 (variable_declaration_list)


state 51

   32 function_heading: FUNCTION identifier COLON . result_type

    IDENTIFIER  shift, and go to state 4

    result_type  go to state 59
    identifier   go to state 60


state 52

   23 formal_parameter_list: LPAREN . formal_parameter_section_list RPAREN

    IDENTIFIER  shift, and go to state 4
    VAR         shift, and go to state 61

    identifier_list                   go to state 62
    formal_parameter_section_list     go to state 63
    formal_parameter_section          go to state 64
    value_parameter_specification     go to state 65
    variable_parameter_specification  go to state 66
    identifier                        go to state 14


state 53

   33 function_heading: FUNCTION identifier formal_parameter_list . COLON result_type

    COLON  shift, and go to state 67


state 54

   20 func_declaration_list: func_declaration_list semicolon function_declaration .

    $default  reduce using rule 20 (func_declaration_list)


state 55

   36 function_block: variable_declaration_part . statement_part

    PBEGIN  shift, and go to state 68

    statement_part      go to state 69
    compound_statement  go to state 70


state 56

   31 function_declaration: function_heading semicolon function_block .

    $default  reduce using rule 31 (function_declaration)


state 57

   30 function_declaration: function_identification semicolon function_block .

    $default  reduce using rule 30 (function_declaration)


state 58

   13 array_type: ARRAY LBRAC . range RBRAC OF type_denoter

    DIGSEQ  shift, and go to state 71

    range             go to state 72
    unsigned_integer  go to state 73


state 59

   32 function_heading: FUNCTION identifier COLON result_type .

    $default  reduce using rule 32 (function_heading)


state 60

   34 result_type: identifier .

    $default  reduce using rule 34 (result_type)


state 61

   29 variable_parameter_specification: VAR . identifier_list COLON identifier

    IDENTIFIER  shift, and go to state 4

    identifier_list  go to state 74
    identifier       go to state 14


state 62

    4 identifier_list: identifier_list . comma identifier
   28 value_parameter_specification: identifier_list . COLON identifier

    COLON  shift, and go to state 75
    COMMA  shift, and go to state 19

    comma  go to state 21


state 63

   23 formal_parameter_list: LPAREN formal_parameter_section_list . RPAREN
   24 formal_parameter_section_list: formal_parameter_section_list . semicolon formal_parameter_section

    RPAREN     shift, and go to state 76
    SEMICOLON  shift, and go to state 7

    semicolon  go to state 77


state 64

   25 formal_parameter_section_list: formal_parameter_section .

    $default  reduce using rule 25 (formal_parameter_section_list)


state 65

   26 formal_parameter_section: value_parameter_specification .

    $default  reduce using rule 26 (formal_parameter_section)


state 66

   27 formal_parameter_section: variable_parameter_specification .

    $default  reduce using rule 27 (formal_parameter_section)


state 67

   33 function_heading: FUNCTION identifier formal_parameter_list COLON . result_type

    IDENTIFIER  shift, and go to state 4

    result_type  go to state 78
    identifier   go to state 60


state 68

   38 compound_statement: PBEGIN . statement_sequence END

    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 79
    PBEGIN      shift, and go to state 68
    PRINT       shift, and go to state 80
    WHILE       shift, and go to state 81

    compound_statement    go to state 82
    statement_sequence    go to state 83
    statement             go to state 84
    while_statement       go to state 85
    if_statement          go to state 86
    assignment_statement  go to state 87
    print_statement       go to state 88
    variable_access       go to state 89
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 69

   36 function_block: variable_declaration_part statement_part .

    $default  reduce using rule 36 (function_block)


state 70

   37 statement_part: compound_statement .

    $default  reduce using rule 37 (statement_part)


state 71

   87 unsigned_integer: DIGSEQ .

    $default  reduce using rule 87 (unsigned_integer)


state 72

   13 array_type: ARRAY LBRAC range . RBRAC OF type_denoter

    RBRAC  shift, and go to state 94


state 73

   14 range: unsigned_integer . DOTDOT unsigned_integer

    DOTDOT  shift, and go to state 95


state 74

    4 identifier_list: identifier_list . comma identifier
   29 variable_parameter_specification: VAR identifier_list . COLON identifier

    COLON  shift, and go to state 96
    COMMA  shift, and go to state 19

    comma  go to state 21


state 75

   28 value_parameter_specification: identifier_list COLON . identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 97


state 76

   23 formal_parameter_list: LPAREN formal_parameter_section_list RPAREN .

    $default  reduce using rule 23 (formal_parameter_list)


state 77

   24 formal_parameter_section_list: formal_parameter_section_list semicolon . formal_parameter_section

    IDENTIFIER  shift, and go to state 4
    VAR         shift, and go to state 61

    identifier_list                   go to state 62
    formal_parameter_section          go to state 98
    value_parameter_specification     go to state 65
    variable_parameter_specification  go to state 66
    identifier                        go to state 14


state 78

   33 function_heading: FUNCTION identifier formal_parameter_list COLON result_type .

    $default  reduce using rule 33 (function_heading)


state 79

   47 if_statement: IF . boolean_expression THEN statement ELSE statement

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    boolean_expression    go to state 104
    expression            go to state 105
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 80

   52 print_statement: PRINT . variable_access

    IDENTIFIER  shift, and go to state 4

    variable_access       go to state 116
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 81

   46 while_statement: WHILE . boolean_expression DO statement

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    boolean_expression    go to state 117
    expression            go to state 105
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 82

   42 statement: compound_statement .

    $default  reduce using rule 42 (statement)


state 83

   38 compound_statement: PBEGIN statement_sequence . END
   40 statement_sequence: statement_sequence . semicolon statement

    END        shift, and go to state 118
    SEMICOLON  shift, and go to state 7

    semicolon  go to state 119


state 84

   39 statement_sequence: statement .

    $default  reduce using rule 39 (statement_sequence)


state 85

   44 statement: while_statement .

    $default  reduce using rule 44 (statement)


state 86

   43 statement: if_statement .

    $default  reduce using rule 43 (statement)


state 87

   41 statement: assignment_statement .

    $default  reduce using rule 41 (statement)


state 88

   45 statement: print_statement .

    $default  reduce using rule 45 (statement)


state 89

   48 assignment_statement: variable_access . ASSIGNMENT expression
   49                     | variable_access . ASSIGNMENT object_instantiation
   57 indexed_variable: variable_access . LBRAC index_expression_list RBRAC
   61 attribute_designator: variable_access . DOT identifier
   62 method_designator: variable_access . DOT function_designator

    ASSIGNMENT  shift, and go to state 120
    DOT         shift, and go to state 121
    LBRAC       shift, and go to state 122


state 90

   54 variable_access: indexed_variable .

    $default  reduce using rule 54 (variable_access)


state 91

   55 variable_access: attribute_designator .

    $default  reduce using rule 55 (variable_access)


state 92

   56 variable_access: method_designator .

    $default  reduce using rule 56 (variable_access)


state 93

   53 variable_access: identifier .

    $default  reduce using rule 53 (variable_access)


state 94

   13 array_type: ARRAY LBRAC range RBRAC . OF type_denoter

    OF  shift, and go to state 123


state 95

   14 range: unsigned_integer DOTDOT . unsigned_integer

    DIGSEQ  shift, and go to state 71

    unsigned_integer  go to state 124


state 96

   29 variable_parameter_specification: VAR identifier_list COLON . identifier

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 125


state 97

   28 value_parameter_specification: identifier_list COLON identifier .

    $default  reduce using rule 28 (value_parameter_specification)


state 98

   24 formal_parameter_section_list: formal_parameter_section_list semicolon formal_parameter_section .

    $default  reduce using rule 24 (formal_parameter_section_list)


state 99

   83 primary: LPAREN . expression RPAREN

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    expression            go to state 126
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 100

   77 sign: MINUS .

    $default  reduce using rule 77 (sign)


state 101

   84 primary: NOT . primary

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    NOT         shift, and go to state 101

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    primary               go to state 127
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 102

   76 sign: PLUS .

    $default  reduce using rule 76 (sign)


state 103

   57 indexed_variable: variable_access . LBRAC index_expression_list RBRAC
   61 attribute_designator: variable_access . DOT identifier
   62 method_designator: variable_access . DOT function_designator
   80 primary: variable_access .

    DOT    shift, and go to state 121
    LBRAC  shift, and go to state 122

    $default  reduce using rule 80 (primary)


state 104

   47 if_statement: IF boolean_expression . THEN statement ELSE statement

    THEN  shift, and go to state 128


state 105

   69 boolean_expression: expression .

    $default  reduce using rule 69 (boolean_expression)


state 106

   70 expression: simple_expression .
   71           | simple_expression . relop simple_expression
   73 simple_expression: simple_expression . addop term

    EQUAL     shift, and go to state 129
    GE        shift, and go to state 130
    GT        shift, and go to state 131
    LE        shift, and go to state 132
    LT        shift, and go to state 133
    MINUS     shift, and go to state 134
    NOTEQUAL  shift, and go to state 135
    OR        shift, and go to state 136
    PLUS      shift, and go to state 137

    $default  reduce using rule 70 (expression)

    addop  go to state 138
    relop  go to state 139


state 107

   72 simple_expression: term .
   75 term: term . mulop factor

    AND    shift, and go to state 140
    MOD    shift, and go to state 141
    SLASH  shift, and go to state 142
    STAR   shift, and go to state 143

    $default  reduce using rule 72 (simple_expression)

    mulop  go to state 144


state 108

   78 factor: sign . factor

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    sign                  go to state 108
    factor                go to state 145
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 109

   74 term: factor .

    $default  reduce using rule 74 (term)


state 110

   79 factor: primary .

    $default  reduce using rule 79 (factor)


state 111

   81 primary: unsigned_constant .

    $default  reduce using rule 81 (primary)


state 112

   85 unsigned_constant: unsigned_number .

    $default  reduce using rule 85 (unsigned_constant)


state 113

   86 unsigned_number: unsigned_integer .

    $default  reduce using rule 86 (unsigned_number)


state 114

   82 primary: function_designator .

    $default  reduce using rule 82 (primary)


state 115

   53 variable_access: identifier .
   88 function_designator: identifier . params

    LPAREN  shift, and go to state 146

    $default  reduce using rule 53 (variable_access)

    params  go to state 147


state 116

   52 print_statement: PRINT variable_access .
   57 indexed_variable: variable_access . LBRAC index_expression_list RBRAC
   61 attribute_designator: variable_access . DOT identifier
   62 method_designator: variable_access . DOT function_designator

    DOT    shift, and go to state 121
    LBRAC  shift, and go to state 122

    $default  reduce using rule 52 (print_statement)


state 117

   46 while_statement: WHILE boolean_expression . DO statement

    DO  shift, and go to state 148


state 118

   38 compound_statement: PBEGIN statement_sequence END .

    $default  reduce using rule 38 (compound_statement)


state 119

   40 statement_sequence: statement_sequence semicolon . statement

    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 79
    PBEGIN      shift, and go to state 68
    PRINT       shift, and go to state 80
    WHILE       shift, and go to state 81

    compound_statement    go to state 82
    statement             go to state 149
    while_statement       go to state 85
    if_statement          go to state 86
    assignment_statement  go to state 87
    print_statement       go to state 88
    variable_access       go to state 89
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 120

   48 assignment_statement: variable_access ASSIGNMENT . expression
   49                     | variable_access ASSIGNMENT . object_instantiation

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NEW         shift, and go to state 150
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    object_instantiation  go to state 151
    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    expression            go to state 152
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 121

   61 attribute_designator: variable_access DOT . identifier
   62 method_designator: variable_access DOT . function_designator

    IDENTIFIER  shift, and go to state 4

    function_designator  go to state 153
    identifier           go to state 154


state 122

   57 indexed_variable: variable_access LBRAC . index_expression_list RBRAC

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access        go to state 103
    indexed_variable       go to state 90
    index_expression_list  go to state 155
    index_expression       go to state 156
    attribute_designator   go to state 91
    method_designator      go to state 92
    expression             go to state 157
    simple_expression      go to state 106
    term                   go to state 107
    sign                   go to state 108
    factor                 go to state 109
    primary                go to state 110
    unsigned_constant      go to state 111
    unsigned_number        go to state 112
    unsigned_integer       go to state 113
    function_designator    go to state 114
    identifier             go to state 115


state 123

   13 array_type: ARRAY LBRAC range RBRAC OF . type_denoter

    ARRAY       shift, and go to state 46
    IDENTIFIER  shift, and go to state 4

    type_denoter  go to state 158
    array_type    go to state 48
    identifier    go to state 49


state 124

   14 range: unsigned_integer DOTDOT unsigned_integer .

    $default  reduce using rule 14 (range)


state 125

   29 variable_parameter_specification: VAR identifier_list COLON identifier .

    $default  reduce using rule 29 (variable_parameter_specification)


state 126

   83 primary: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 159


state 127

   84 primary: NOT primary .

    $default  reduce using rule 84 (primary)


state 128

   47 if_statement: IF boolean_expression THEN . statement ELSE statement

    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 79
    PBEGIN      shift, and go to state 68
    PRINT       shift, and go to state 80
    WHILE       shift, and go to state 81

    compound_statement    go to state 82
    statement             go to state 160
    while_statement       go to state 85
    if_statement          go to state 86
    assignment_statement  go to state 87
    print_statement       go to state 88
    variable_access       go to state 89
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 129

   96 relop: EQUAL .

    $default  reduce using rule 96 (relop)


state 130

  101 relop: GE .

    $default  reduce using rule 101 (relop)


state 131

   99 relop: GT .

    $default  reduce using rule 99 (relop)


state 132

  100 relop: LE .

    $default  reduce using rule 100 (relop)


state 133

   98 relop: LT .

    $default  reduce using rule 98 (relop)


state 134

   90 addop: MINUS .

    $default  reduce using rule 90 (addop)


state 135

   97 relop: NOTEQUAL .

    $default  reduce using rule 97 (relop)


state 136

   91 addop: OR .

    $default  reduce using rule 91 (addop)


state 137

   89 addop: PLUS .

    $default  reduce using rule 89 (addop)


state 138

   73 simple_expression: simple_expression addop . term

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    term                  go to state 161
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 139

   71 expression: simple_expression relop . simple_expression

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    simple_expression     go to state 162
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 140

   95 mulop: AND .

    $default  reduce using rule 95 (mulop)


state 141

   94 mulop: MOD .

    $default  reduce using rule 94 (mulop)


state 142

   93 mulop: SLASH .

    $default  reduce using rule 93 (mulop)


state 143

   92 mulop: STAR .

    $default  reduce using rule 92 (mulop)


state 144

   75 term: term mulop . factor

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    sign                  go to state 108
    factor                go to state 163
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 145

   78 factor: sign factor .

    $default  reduce using rule 78 (factor)


state 146

   63 params: LPAREN . actual_parameter_list RPAREN

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access        go to state 103
    indexed_variable       go to state 90
    attribute_designator   go to state 91
    method_designator      go to state 92
    actual_parameter_list  go to state 164
    actual_parameter       go to state 165
    expression             go to state 166
    simple_expression      go to state 106
    term                   go to state 107
    sign                   go to state 108
    factor                 go to state 109
    primary                go to state 110
    unsigned_constant      go to state 111
    unsigned_number        go to state 112
    unsigned_integer       go to state 113
    function_designator    go to state 114
    identifier             go to state 115


state 147

   88 function_designator: identifier params .

    $default  reduce using rule 88 (function_designator)


state 148

   46 while_statement: WHILE boolean_expression DO . statement

    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 79
    PBEGIN      shift, and go to state 68
    PRINT       shift, and go to state 80
    WHILE       shift, and go to state 81

    compound_statement    go to state 82
    statement             go to state 167
    while_statement       go to state 85
    if_statement          go to state 86
    assignment_statement  go to state 87
    print_statement       go to state 88
    variable_access       go to state 89
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 149

   40 statement_sequence: statement_sequence semicolon statement .

    $default  reduce using rule 40 (statement_sequence)


state 150

   50 object_instantiation: NEW . identifier
   51                     | NEW . identifier params

    IDENTIFIER  shift, and go to state 4

    identifier  go to state 168


state 151

   49 assignment_statement: variable_access ASSIGNMENT object_instantiation .

    $default  reduce using rule 49 (assignment_statement)


state 152

   48 assignment_statement: variable_access ASSIGNMENT expression .

    $default  reduce using rule 48 (assignment_statement)


state 153

   62 method_designator: variable_access DOT function_designator .

    $default  reduce using rule 62 (method_designator)


state 154

   61 attribute_designator: variable_access DOT identifier .
   88 function_designator: identifier . params

    LPAREN  shift, and go to state 146

    $default  reduce using rule 61 (attribute_designator)

    params  go to state 147


state 155

   57 indexed_variable: variable_access LBRAC index_expression_list . RBRAC
   58 index_expression_list: index_expression_list . comma index_expression

    COMMA  shift, and go to state 19
    RBRAC  shift, and go to state 169

    comma  go to state 170


state 156

   59 index_expression_list: index_expression .

    $default  reduce using rule 59 (index_expression_list)


state 157

   60 index_expression: expression .

    $default  reduce using rule 60 (index_expression)


state 158

   13 array_type: ARRAY LBRAC range RBRAC OF type_denoter .

    $default  reduce using rule 13 (array_type)


state 159

   83 primary: LPAREN expression RPAREN .

    $default  reduce using rule 83 (primary)


state 160

   47 if_statement: IF boolean_expression THEN statement . ELSE statement

    ELSE  shift, and go to state 171


state 161

   73 simple_expression: simple_expression addop term .
   75 term: term . mulop factor

    AND    shift, and go to state 140
    MOD    shift, and go to state 141
    SLASH  shift, and go to state 142
    STAR   shift, and go to state 143

    $default  reduce using rule 73 (simple_expression)

    mulop  go to state 144


state 162

   71 expression: simple_expression relop simple_expression .
   73 simple_expression: simple_expression . addop term

    MINUS  shift, and go to state 134
    OR     shift, and go to state 136
    PLUS   shift, and go to state 137

    $default  reduce using rule 71 (expression)

    addop  go to state 138


state 163

   75 term: term mulop factor .

    $default  reduce using rule 75 (term)


state 164

   63 params: LPAREN actual_parameter_list . RPAREN
   64 actual_parameter_list: actual_parameter_list . comma actual_parameter

    COMMA   shift, and go to state 19
    RPAREN  shift, and go to state 172

    comma  go to state 173


state 165

   65 actual_parameter_list: actual_parameter .

    $default  reduce using rule 65 (actual_parameter_list)


state 166

   66 actual_parameter: expression .
   67                 | expression . COLON expression
   68                 | expression . COLON expression COLON expression

    COLON  shift, and go to state 174

    $default  reduce using rule 66 (actual_parameter)


state 167

   46 while_statement: WHILE boolean_expression DO statement .

    $default  reduce using rule 46 (while_statement)


state 168

   50 object_instantiation: NEW identifier .
   51                     | NEW identifier . params

    LPAREN  shift, and go to state 146

    $default  reduce using rule 50 (object_instantiation)

    params  go to state 175


state 169

   57 indexed_variable: variable_access LBRAC index_expression_list RBRAC .

    $default  reduce using rule 57 (indexed_variable)


state 170

   58 index_expression_list: index_expression_list comma . index_expression

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    index_expression      go to state 176
    attribute_designator  go to state 91
    method_designator     go to state 92
    expression            go to state 157
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 171

   47 if_statement: IF boolean_expression THEN statement ELSE . statement

    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 79
    PBEGIN      shift, and go to state 68
    PRINT       shift, and go to state 80
    WHILE       shift, and go to state 81

    compound_statement    go to state 82
    statement             go to state 177
    while_statement       go to state 85
    if_statement          go to state 86
    assignment_statement  go to state 87
    print_statement       go to state 88
    variable_access       go to state 89
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    identifier            go to state 93


state 172

   63 params: LPAREN actual_parameter_list RPAREN .

    $default  reduce using rule 63 (params)


state 173

   64 actual_parameter_list: actual_parameter_list comma . actual_parameter

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    actual_parameter      go to state 178
    expression            go to state 166
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 174

   67 actual_parameter: expression COLON . expression
   68                 | expression COLON . expression COLON expression

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    expression            go to state 179
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 175

   51 object_instantiation: NEW identifier params .

    $default  reduce using rule 51 (object_instantiation)


state 176

   58 index_expression_list: index_expression_list comma index_expression .

    $default  reduce using rule 58 (index_expression_list)


state 177

   47 if_statement: IF boolean_expression THEN statement ELSE statement .

    $default  reduce using rule 47 (if_statement)


state 178

   64 actual_parameter_list: actual_parameter_list comma actual_parameter .

    $default  reduce using rule 64 (actual_parameter_list)


state 179

   67 actual_parameter: expression COLON expression .
   68                 | expression COLON expression . COLON expression

    COLON  shift, and go to state 180

    $default  reduce using rule 67 (actual_parameter)


state 180

   68 actual_parameter: expression COLON expression COLON . expression

    DIGSEQ      shift, and go to state 71
    IDENTIFIER  shift, and go to state 4
    LPAREN      shift, and go to state 99
    MINUS       shift, and go to state 100
    NOT         shift, and go to state 101
    PLUS        shift, and go to state 102

    variable_access       go to state 103
    indexed_variable      go to state 90
    attribute_designator  go to state 91
    method_designator     go to state 92
    expression            go to state 181
    simple_expression     go to state 106
    term                  go to state 107
    sign                  go to state 108
    factor                go to state 109
    primary               go to state 110
    unsigned_constant     go to state 111
    unsigned_number       go to state 112
    unsigned_integer      go to state 113
    function_designator   go to state 114
    identifier            go to state 115


state 181

   68 actual_parameter: expression COLON expression COLON expression .

    $default  reduce using rule 68 (actual_parameter)
